GOBACK - SERVER


#include<stdio.h>
#include<stdlib.h>
#include<netdb.h>
#include<sys/types.h>
#include<netinet/in.h>
#include<sys/socket.h>
#include<fcntl.h>
#include<string.h>
#include<unistd.h>

void itoa(int number,char numberString[])
{
        numberString[0] = (char)(number+48);
        numberString[1] = '\0';
}

int main(){
        int sockfd,newSockfd,size,windowStart = 1,windowCurrent = 1,windowEnd = 4,oldWindowStart,flag;
        char buffer[100];
        socklen_t len;
        struct sockaddr_in server,client;
        server.sin_port = 3033;
        server.sin_addr.s_addr = INADDR_ANY;
        sockfd = socket(AF_INET,SOCK_STREAM,0);
        printf("\nStarting up");
        int k;
        k = bind(sockfd,(struct sockaddr*)&server,sizeof(server));
        if(k == 1){
                printf("Error in binding");
        }
        len = sizeof(client);
        listen(sockfd,1);
        newSockfd = accept(sockfd,(struct sockaddr*)&client,&len);
        recv(newSockfd,buffer,100,0);
        fcntl(newSockfd,F_SETFL,O_NONBLOCK);
        printf("\nReceived a request from client.Sending packets one by one");
        do{
                if(windowCurrent != windowEnd){
                        itoa(windowCurrent,buffer);
                        send(newSockfd,buffer,100,0);
                        printf("\nPacket sent : %d\n",windowCurrent);
                        windowCurrent++;
                }
                recv(newSockfd,buffer,100,0);
                if(buffer[0] == 'R'){
                        printf("\n**Received a RETRANSMIT packet.\nResending packet no.%c...",buffer[1]);
                        itoa((atoi(&buffer[1])),buffer);
                        send(newSockfd,buffer,100,0);
                        windowCurrent = atoi(&buffer[0]);
                        windowCurrent++;
                }
                else if(buffer[0] == 'A'){
                        oldWindowStart = windowStart;
                        windowStart = atoi(&buffer[1]) + 1;
                        windowEnd += (windowStart - oldWindowStart);
                        printf("\n **Received ACK %c.Moving window boundary",buffer[1]);
                }
        }while(windowCurrent != 10);
        close(sockfd);
        close(newSockfd);
        printf("\nSending Complete.Sockets closed Exiting...\n");
        return(0);
}

GOBACK - CLIENT



#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<netinet/in.h>
#include<sys/socket.h>
#include<unistd.h>
int main(){
        int sockfd,newSockfd,size,firsttime = 1,currentpacket,wait = 3;
        char data[100],digit[2];
        struct sockaddr_in client;
        sockfd = socket(AF_INET,SOCK_STREAM,0);
        client.sin_family = AF_INET;
        client.sin_port = 3033;
        client.sin_addr.s_addr = INADDR_ANY;
        printf("\nStarting Up...");
        size = sizeof(client);
        printf("\nEstablishing Connection to server...");
        connect(sockfd,(struct sockaddr*)&client,size);
        sprintf(data,"REQUEST");
        send(sockfd,data,strlen(data),0);
        do{
                recv(sockfd,data,100,0);
                currentpacket = atoi(data);
                printf("\nGot packet : %d",currentpacket);
                if(currentpacket == 3 && firsttime)
                {
                        printf("\n***simulation:packet data corrupted or incomplete");
                        printf("\n ***sending RETRANSMIT for packet 1");
                        memset(&data,0,sizeof(data));
                        sprintf(data,"R1");
                        send(sockfd,data,strlen(data),0);
                        firsttime = 0;
                }
                else{
                        wait--;
                        if(!wait){
                                printf("\n***packet accpeted -> sending ACK");
                                wait = 3;
                                sprintf(data,"A");
                                digit[0] = (char)(currentpacket + 48);
                                digit[1] = '\0';
                                strcat(data,digit);
                                send(sockfd,data,strlen(data),0);
                        }
                }
        }while(currentpacket != 9);
        printf("\nAll packets received....Exiting \n");
        close(sockfd);
        return(0);
}




OUTPUT - SERVER



Starting up
Received a request from client.Sending packets one by one
Packet sent : 1

Packet sent : 2

Packet sent : 3

**Received a RETRANSMIT packet.
Resending packet no.1...
Packet sent : 2

Packet sent : 3

 **Received ACK 1.Moving window boundary
Packet sent : 4

 **Received ACK 4.Moving window boundary
Packet sent : 5

Packet sent : 6

Packet sent : 7

 **Received ACK 7.Moving window boundary
Packet sent : 8

Packet sent : 9

Sending Complete.Sockets closed Exiting...


OUTPUT - CLIENT


Starting Up...
Establishing Connection to server...
Got packet : 1
Got packet : 2
Got packet : 3
***simulation:packet data corrupted or incomplete
 ***sending RETRANSMIT for packet 1
Got packet : 1
***packet accpeted -> sending ACK
Got packet : 2
Got packet : 3
Got packet : 4
***packet accpeted -> sending ACK
Got packet : 5
Got packet : 6
Got packet : 7
***packet accpeted -> sending ACK
Got packet : 8
Got packet : 9
All packets received....Exiting 

