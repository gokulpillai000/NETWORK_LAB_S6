UDP - SERVER


#include<stdio.h>
#include<strings.h>
#include<unistd.h>
#include<sys/types.h>
#include<netinet/in.h>
#include<netdb.h>
int main(){
        int serversocket,port;
        struct sockaddr_in serveraddr,clientaddr;
        socklen_t len;
        char message[50];
        serversocket = socket(AF_INET,SOCK_DGRAM,0);
        bzero((char *) &serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        printf("Enter the port number : ");
        scanf("%d",&port);
        serveraddr.sin_port = htons(port);
        serveraddr.sin_addr.s_addr = INADDR_ANY;
        bind(serversocket,(struct sockaddr*) &serveraddr,sizeof(serveraddr));
        printf("\nWaiting for the client connection\n");
        bzero((char *) &clientaddr,sizeof(clientaddr));
        len = sizeof(clientaddr);
        recvfrom(serversocket,message,sizeof(message),0,(struct sockaddr*) &clientaddr,&len);
        printf("\nConnection received from client\n");
        printf("\nThe client has send :\t %s\n",message);
        printf("\nSending message to the client\n");
        sendto(serversocket,"YOUR MESSAGE RECEIVED",sizeof("YOUR MESSAGE RECEIVED"),0,(struct sockaddr*) &clientaddr,sizeof(clientaddr));
        close(serversocket);
}

UDP - CLIENT


#include<netinet/in.h>
#include<netdb.h>
#include<stdio.h>
#include<strings.h>
int main(){
        int clientsocket,port;
        struct sockaddr_in serveraddr;
        socklen_t len;
        struct hostent *server;
        char message[50];
        clientsocket = socket(AF_INET,SOCK_DGRAM,0);
        bzero((char *) &serveraddr,sizeof(serveraddr));
        len = sizeof(serveraddr);
        serveraddr.sin_family = AF_INET;
        printf("Enter the port number : ");
        scanf("%d",&port);
        serveraddr.sin_port = htons(port);
        fgets(message,2,stdin);
        printf("\nsending message for server connections\n");
        sendto(clientsocket,"HI I AM CLIENT....",sizeof("HI I AM CLIENT...."),0,(struct sockaddr*) &serveraddr,sizeof(serveraddr));
        printf("\n Receiving message from server\n");
        recvfrom(clientsocket,message,sizeof(message),0,(struct sockaddr*) &serveraddr,&len);
        printf("\n message received\t%s\n",message);
        close(clientsocket);
}



OUTPUT - SERVERSIDE


Enter the port number : 2410

Waiting for the client connection

Connection received from client

The client has send :	 HI I AM CLIENT....

Sending message to the client




OUTPUT - CLIENTSIDE

Enter the port number : 2410 

sending message for server connections

 Receiving message from server

 message received	YOUR MESSAGE RECEIVED


